module adder(A, B, Cin, S, Cout);
  input [31:0] A, B;
  input Cin;
  output reg [31:0] S;
  output reg Cout;

  always @(*) begin
    begin
      S = $signed(A) + $signed(B) + Cin;
    

      if (S >= 2147483648 || S < -2147483648)
        Cout = 1; 
      else
        Cout = 0;
    end
  end
endmodule // adder



module stimulus();
  reg [31:0] A, B;
  reg Cin;
  wire [31:0] S;
  wire Cout;

  adder a1 (A, B, Cin, S, Cout);
  initial begin
   A <= 32'hFFFFFFFF; B <= 32'h7FFFFFFF; Cin <= 0;
    #10;
        // Test case 1: A=FFFFFFFF , B=7FFFFFFF , Cin=0

    $display("Case 1- %t: %d + %d (Cin=%b) = %d", $time, $signed(A), $signed(B), Cin, $signed(S));
    
    
    // Test case 2: A=999999999 (32'h3B9ACA00), B=888888888 (32'h3504FDE8), Cin=0
    A <= 32'h3B9ACA00; B <= 32'h3504FDE8; Cin <= 0;
    #10;
    $display("Case 2- %t: %d + %d (Cin=%b) = %d", $time, $signed(A), $signed(B), Cin, $signed(S));
    
    // Test case 3: A=2147483647 (32'h7FFFFFFF), B=2147483647 (32'h7FFFFFFF), Cin=1
    A <= 32'h7FFFFFFF; B <= 32'h7FFFFFFF; Cin <= 1;
    #10;
    $display("Case 3- %t: %d + %d (Cin=%b) = %d", $time, $signed(A), $signed(B), Cin, $signed(S));

    
    $finish; // End simulation
    end
    endmodule;

